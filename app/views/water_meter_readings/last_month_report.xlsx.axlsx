wb = xlsx_package.workbook

wb.styles do |style|
  project_heading = style.add_style(b: true, sz: 18)
  heading = style.add_style(b: true, sz: 14, alignment: { horizontal: :center }, bg_color: '343A40', fg_color: 'FF',
                            border: { style: :thin, color: 'dee2e6', edges: %i[left right top bottom] })
  even_cell = style.add_style(sz: 14, alignment: { horizontal: :center }, bg_color: 'f2f2f2', fg_color: '212529',
                              border: { style: :thin, color: 'dee2e6', edges: %i[left right top bottom] })
  odd_cell = style.add_style(sz: 14, alignment: { horizontal: :center }, bg_color: 'FF', fg_color: '212529',
                             border: { style: :thin, color: 'dee2e6', edges: %i[left right top bottom] })
  datetime_cell = style.add_style(sz: 14, alignment: { horizontal: :center }, bg_color: 'FF', fg_color: '212529',
                                  border: { style: :thin, color: 'dee2e6', edges: %i[left right top bottom] },
                                  format_code: 'dd-mm-yyyy hh:mm:ss')

  wb.add_worksheet(name: t('.worksheet_name')) do |sheet|
    table_header_columns = [t('.table_columns.full_name'), t('.table_columns.address'), t('.table_columns.hot'),
                            t('.table_columns.cold'), t('.table_columns.date')]

    col_widths = [nil, [30] * table_header_columns.size].flatten
    sheet.column_widths(*col_widths)

    # Add a title row
    sheet.add_row([nil, t('.table_title')], style: project_heading)

    # Add a blank row
    sheet.add_row([])

    # Create the header row
    sheet.add_row([nil] + table_header_columns, style: [nil, [heading] * table_header_columns.size].flatten)

    # Create entries for each water_meter_reading
    @water_meter_readings.each_with_index do |water_meter_reading, index|
      full_name = water_meter_reading.user.full_name
      address = water_meter_reading.user.address
      hot = water_meter_reading.hot
      cold = water_meter_reading.cold
      date = water_meter_reading.created_at

      row = [nil, full_name, address, hot, cold, date]

      sheet.add_row(row, style: [nil, [even_cell] * (row.size - 2), datetime_cell].flatten) if index.even?
      sheet.add_row(row, style: [nil, [odd_cell] * (row.size - 2), datetime_cell].flatten) if index.odd?
    end
  end
end
